---
version: "3.9"
x-environment: &user
  PGID: $PGID
  PUID: $PUID
  TZ: $TZ
x-root: &root
  PGID: $ROOT
  PUID: $ROOT
  TZ: $TZ
x-common: &common
  security_opt:
    - no-new-privileges:true
  restart: always
x-core: &core
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped
x-metrics: &metrics
  networks:
    - loki
  security_opt:
    - no-new-privileges:true
  restart: always
x-media: &media
  network_mode: host
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped
x-stealth: &stealth
  network_mode: service:gluetun
  security_opt:
    - no-new-privileges:true
  healthcheck:
    test: "curl -sf https://example.com  || exit 1"
    interval: 1m
    timeout: 10s
    retries: 1
  restart: unless-stopped
services:
  deluge:
    <<: *stealth
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    volumes:
      - $DOCKERDIR/appdata/deluge:/config
      - $BLACKHOLE:/data
    environment:
      <<: *user
      DELUGE_LOGLEVEL: error
      UMASK_SET: 002
  deunhealth:
    image: qmcgaw/deunhealth
    container_name: deunhealth
    network_mode: none
    environment:
      LOG_LEVEL: info
      HEALTH_SERVER_ADDRESS: 127.0.0.1:9999
      TZ: $TZ
    security_opt:
      - no-new-privileges:true
    restart: always
  docker-gc:
    <<: *common
    image: clockworksoul/docker-gc-cron:latest
    container_name: docker-gc
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKERDIR/appdata/docker-gc/docker-gc-exclude:/etc/docker-gc-exclude
    environment:
      CRON: 0 0 0 * * ? # ED @ 12:00am
      FORCE_IMAGE_REMOVAL: 1
      FORCE_CONTAINER_REMOVAL: 0
      GRACE_PERIOD_SECONDS: 604800
      DRY_RUN: 0
      CLEAN_UP_VOLUMES: 1
      TZ: $TZ
  filebrowser:
    <<: *common
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    ports:
      - 82:80
    volumes:
      - $DOCKERDIR/appdata/filebrowser/filebrowser.db:/database/filebrowser.db
      - $DOCKERDIR/appdata/filebrowser/settings.json:/config/settings.json
      - $USERDIR:/srv
    environment:
      <<: *root
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp # deluge
      - 9696:9696 # prowlarr
      - 8989:8989 # sonarr
      - 7878:7878 # radarr
    volumes:
      - $DOCKERDIR/appdata/gluetun:/gluetun
    environment:
      TZ: $TZ
      VPN_SERVICE_PROVIDER: surfshark
      VPN_TYPE: wireguard
      WIREGUARD_PRIVATE_KEY: $SURFSHARK_PRIVATE_KEY
      WIREGUARD_ADDRESSES: $WIREGUARD_SUBNET
      UPDATER_PERIOD: 24h
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
  grafana:
    <<: *metrics
    image: grafana/grafana:latest
    container_name: grafana
    user: $PUID
    ports:
      - 3000:3000
    volumes:
      - $DOCKERDIR/appdata/grafana:/var/lib/grafana
      - $DOCKERDIR/appdata/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  jellyfin:
    <<: *media
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    user: $PUID:$PGID
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 8096:8096
      - 8920:8920
    environment:
      TZ: $TZ
      UMASK_SET: 002
    volumes:
      - $JELLYFIN_DATA:/config
      - $DOCKERDIR/appdata/jellyfin/cache:/cache
      - $BLACKHOLE:/media
    extra_hosts:
      - "host.docker.internal:host-gateway"
  node-exporter:
    <<: *metrics
    container_name: node-exporter
    image: prom/node-exporter:latest
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
  plex:
    <<: *media
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    volumes:
      - $PLEX_DATA:/config
      - $MOVIES:/movies
      - $TV:/tv
    environment:
      <<: *user
      VERSION: docker
  plexmm:
    <<: *core
    image: lscr.io/linuxserver/plex-meta-manager:latest
    container_name: plexmm
    volumes:
      - $DOCKERDIR/appdata/plex-meta-manager:/config
    environment:
      <<: *user
      PMM_CONFIG: /config/config.yml
      PMM_TIME: 03:00
      PMM_RUN: "True"
      PMM_TEST: "False"
      PMM_NO_MISSING: "False"
  portainer:
    <<: *common
    container_name: portainer
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/appdata/portainer/data:/data
    environment:
      TZ: $TZ
  prometheus:
    <<: *metrics
    image: prom/prometheus:latest
    container_name: prometheus
    user: $PUID:$PGID
    ports:
      - 9090:9090
    command:
      - "--config.file=/etc/prometheus/config.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
    volumes:
      - $DOCKERDIR/appdata/prometheus/config:/etc/prometheus
      - $DOCKERDIR/appdata/prometheus/data:/prometheus
    environment:
      <<: *user
  prowlarr:
    <<: *stealth
    image: ghcr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    volumes:
      - $DOCKERDIR/appdata/prowlarr:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      <<: *user
  radarr:
    <<: *stealth
    image: lscr.io/linuxserver/radarr:nightly
    container_name: radarr
    volumes:
      - $DOCKERDIR/appdata/radarr:/config
      - $BLACKHOLE:/data
      - $MOVIES:/movies
      - /etc/localtime:/etc/localtime:ro
    environment:
      <<: *user
      UMASK_SET: 002
  stash:
    <<: *media
    image: stashapp/stash:latest
    container_name: stash
    ports:
      - 9999:9999
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "2m"
    environment:
      STASH_STASH: /data/
      STASH_GENERATED: /generated/
      STASH_METADATA: /metadata/
      STASH_CACHE: /cache/
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DOCKERDIR/appdata/stash:/root/.stash
      - $STASH:/data
      - $STASH/videos/metadata:/metadata
      - $STASH/videos/cache:/cache
      - $STASH/videos/blobs:/blobs
      - $STASH/videos/generated:/generated
  sonarr:
    <<: *stealth
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    volumes:
      - $DOCKERDIR/appdata/sonarr:/config
      - $BLACKHOLE:/data
      - $TV:/tv
      - /etc/localtime:/etc/localtime:ro
    environment:
      <<: *user
      UMASK_SET: 002
  tautulli:
    <<: *core
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    ports:
      - 8181:8181
    volumes:
      - $DOCKERDIR/appdata/tautulli:/config
      - $PLEX_DATA/Library/Application Support/Plex Media Server/Logs:/logs:ro
    environment:
      <<: *user
  watchtower:
    <<: *common
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: $TZ
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_REMOVE_VOLUMES: true
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_NO_STARTUP_MESSAGE: false
      WATCHTOWER_SCHEDULE: "0 30 12 * * *" # ED @ 12:30am
      DOCKER_API_VERSION: "1.40"
networks:
  loki: